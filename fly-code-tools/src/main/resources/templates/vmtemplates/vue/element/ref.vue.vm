<template>
  <div>
    <dialog-popup :title="dialog.title"
                  :visible="dialog.visible"
                  :width="dialog.width"
                  :height="dialog.height"
                  :showSubmit="dialog.showSubmit"
                  @onClose="onClose()"
                  @onConfirm="confirm()">

        <template v-slot:content>
            <el-form :model="${className}" ref="formRef"
                     :rules="rules" :disabled="isDisabled"
                     size="small" label-width="120px">

                #foreach($column in $columns)
                    #set($field=$column.javaField)
                    #if($column.isForm == '1')

                            #set($parentheseIndex=$column.columnComment.indexOf("（"))
                            #if($parentheseIndex != -1)
                                #set($comment=$column.columnComment.substring(0, $parentheseIndex))
                            #else
                                #set($comment=$column.columnComment)
                            #end
                            #set($dictType=$column.dictType)
                            #if($column.htmlType == "input")
                                <el-form-item label="${comment}" prop="${field}"  class="mb10">
                                    <el-input v-model="${className}.${field}" placeholder="请输入${comment}"/>
                                </el-form-item>
                            #elseif($column.htmlType == "imageUpload")
                                <el-form-item label="${comment}"  class="mb10">
                                    <image-upload v-model="${className}.${field}"/>
                                </el-form-item>
                            #elseif($column.htmlType == "fileUpload")
                                <el-form-item label="${comment}"  class="mb10">
                                    <file-upload v-model="${className}.${field}"/>
                                </el-form-item>
                            #elseif($column.htmlType == "editor")
                                <el-form-item label="${comment}"  class="mb10">
                                    <editor v-model="${className}.${field}" :min-height="192"/>
                                </el-form-item>
                            #elseif($column.htmlType == "select" && "" != $dictType)
                                <el-form-item label="${comment}" prop="${field}"  class="mb10">
                                    <el-select v-model="${className}.${field}" placeholder="请选择${comment}">
                                        <el-option
                                                v-for="dict in dict.type.${dictType}"
                                                :key="dict.value"
                                                :label="dict.label"
                                                #if($column.javaType == "Integer" || $column.javaType == "Long"):value="parseInt(dict.value)"
                                                #else:value="dict.value"#end ></el-option>
                                    </el-select>
                                </el-form-item>
                            #elseif($column.htmlType == "select" && $dictType)
                                <el-form-item label="${comment}" prop="${field}"  class="mb10">
                                    <el-select v-model="${className}.${field}" placeholder="请选择${comment}">
                                        <el-option label="请选择字典生成" value=""/>
                                    </el-select>
                                </el-form-item>
                            #elseif($column.htmlType == "checkbox" && "" != $dictType)
                                <el-form-item label="${comment}"  class="mb10">
                                    <el-checkbox-group v-model="${className}.${field}">
                                        <el-checkbox v-for="dict in dict.type.${dictType}"
                                                     :key="dict.value"
                                                     :label="dict.value">
                                            {{dict.label}}
                                        </el-checkbox>
                                    </el-checkbox-group>
                                </el-form-item>
                            #elseif($column.htmlType == "checkbox" && $dictType)
                                <el-form-item label="${comment}"  class="mb10">
                                    <el-checkbox-group v-model="${className}.${field}">
                                        <el-checkbox>请选择字典生成</el-checkbox>
                                    </el-checkbox-group>
                                </el-form-item>
                            #elseif($column.htmlType == "radio" && "" != $dictType)
                                <el-form-item label="${comment}"  class="mb10">
                                    <el-radio-group v-model="${className}.${field}">
                                        <el-radio v-for="dict in dict.type.${dictType}"
                                                  :key="dict.value"
                                                  #if($column.javaType == "Integer" || $column.javaType ==
                                                      "Long"):label="parseInt(dict.value)"#else:label="dict.value"#end
                                        >{{dict.label}}
                                        </el-radio>
                                    </el-radio-group>
                                </el-form-item>
                            #elseif($column.htmlType == "radio" && $dictType)
                                <el-form-item label="${comment}"  class="mb10">
                                    <el-radio-group v-model="${className}.${field}">
                                        <el-radio label="1">请选择字典生成</el-radio>
                                    </el-radio-group>
                                </el-form-item>
                            #elseif($column.htmlType == "datetime")
                                <el-form-item label="${comment}" prop="${field}" class="mb10">
                                    <el-date-picker clearable
                                                    v-model="${className}.${field}"
                                                    type="date"
                                                    value-format="yyyy-MM-dd"
                                                    placeholder="请选择${comment}">
                                    </el-date-picker>
                                </el-form-item>
                            #elseif($column.htmlType == "textarea")
                                <el-form-item label="${comment}" prop="${field}" class="mb10">
                                    <el-input v-model="${className}.${field}" type="textarea" maxlength="100" placeholder="${comment}"/>
                                </el-form-item>
                            #end
                        #end
                    #end

            </el-form>
        </template>
    </dialog-popup>
  </div>
</template>

<script setup lang="ts" name="Ref${ClassName}">
  import {reactive} from 'vue';
  import DialogPopup from '/@/fly/components/dialog/DialogPopup.vue';
  import useDialogPopup, {DialogTypeEnum} from '/@/fly/components/dialog/Dialog';
  import useElementFromComposable from '/@/fly/composables/ElementFromComposable';
  import use${ClassName}Builder, {${ClassName}} from '/@/api/${moduleName}/model/${ClassName}Model';

  /**
   * 弹框属性
   */
  const {dialog, onShow, onClose} = useDialogPopup();

  const {${className}} = use${ClassName}Builder();

  /**
   * 表单属性
   */
  const {
    formRef,
    resetForm,
    objCopy,
    isDisabled
  } = useElementFromComposable();


    /**
     * 弹框
     * @param type 弹窗类型
     * @param data 展示的数据
     */
    const show = (type: DialogTypeEnum, data?: ${ClassName}) => {
        //设置弹框的属性
        dialog.height = '500px'
        dialog.width = '800px'
        dialog.title = type + '${comments}';
        /* 清空表单内容 */
        resetForm(formRef.value, ${className});
        if (undefined !== data && null !== data) {
            /* 新表单赋值 */
            objCopy(data, ${className})
        }
        if (DialogTypeEnum.SAVE === type || DialogTypeEnum.UPDATE === type) {
            dialog.showSubmit = true
            isDisabled.value = false
        }
        if (DialogTypeEnum.VIEW === type) {
            dialog.showSubmit = false
            isDisabled.value = true
        }

        onShow();
    }

    /**
     * 表单验证
     */
    const rules = reactive({
        #foreach ($column in $columns)
            #if($column.isRequired == '1' && $column.isForm == '1')
                    ${column.javaField}: [{required: true, message: '$column.columnComment不能为空', trigger: 'blur'}],
            #end
        #end
    });

  //定义事件
  const emits = defineEmits(['bindtap'])

  const confirm = () => {
    formRef.value?.validate(valid => {
      if (valid) {
        emits('bindtap', ${className})
      }
    })
  }

  defineExpose({
    show,
    onClose
  })

</script>

<style scoped lang="scss">

</style>