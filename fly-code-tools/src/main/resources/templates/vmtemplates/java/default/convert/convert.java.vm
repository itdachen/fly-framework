package ${package}.convert;

import ${package}.entity.${ClassName};
import ${package}.sdk.dto.${ClassName}DTO;
import ${package}.sdk.vo.${ClassName}VO;

/**
 * ${functionName} 类型转换
 *
 * @author ${author}
 * @date ${datetime}
 */
public class ${ClassName}Convert {

    public static ${ClassName}VO toJavaObjectVo(${ClassName}DTO ${className}DTO) {
        if (null == ${className}DTO){
            return null;
        }
       ${ClassName}VO ${className}VO = new ${ClassName}VO();
        #foreach ($column in $dtoVoColumns)
            #if(!$table.isSuperColumn($column.javaField))
                #if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches("[A-Z]"))
                    #set($AttrName=$column.javaField)
                #else
                    #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
                #end
                    ${className}VO.set${AttrName}(${className}DTO.get${AttrName}());
            #end
        #end
        return ${className}VO;
    }


    public static ${ClassName}VO toJavaObjectVo (${ClassName} ${className}) {
        if (null == ${className}){
            return null;
        }
        ${ClassName}VO ${className}VO = new ${ClassName}VO();
        #foreach ($column in $dtoVoColumns)
            #if(!$table.isSuperColumn($column.javaField))
                #if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches("[A-Z]"))
                    #set($AttrName=$column.javaField)
                #else
                    #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
                #end
                    ${className}VO.set${AttrName}(${className}.get${AttrName}());
            #end
        #end
        return ${className}VO;
    }

    public static ${ClassName} toJavaObject (${ClassName}DTO ${className}DTO) {
        if (null == ${className}DTO){
            return null;
        }
        ${ClassName} ${className} = new ${ClassName}();
        #foreach ($column in $dtoVoColumns)
            #if(!$table.isSuperColumn($column.javaField))
                #if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches("[A-Z]"))
                    #set($AttrName=$column.javaField)
                #else
                    #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
                #end
                    ${className}.set${AttrName}(${className}DTO.get${AttrName}());
            #end
        #end
        return ${className};
    }

    public static ${ClassName} toJavaObject(${ClassName}VO ${className}VO) {
        if (null == ${className}VO){
            return null;
        }
        ${ClassName} ${className} = new ${ClassName}();
        #foreach ($column in $dtoVoColumns)
            #if(!$table.isSuperColumn($column.javaField))
                #if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches("[A-Z]"))
                    #set($AttrName=$column.javaField)
                #else
                    #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
                #end
                ${className}.set${AttrName}(${className}VO.get${AttrName}());
            #end
        #end
        return ${className};
    }

}