package ${package}.sdk.vo;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;

    #foreach ($column in $columns)
        #if($column.attrType == 'LocalDateTime')
        import java.time.LocalDateTime;
            #break
        #end
    #end
    #if(${hasBigDecimal})
    import java.math.BigDecimal;
    #end

import java.io.Serializable;


/**
 * ${functionName} VO
 *
 * @author ${author}
 * @date ${datetime}
 */
public class ${ClassName}VO implements Serializable {
    private static final long serialVersionUID = 1L;

    #foreach ($column in $dtoVoColumns)
        /** $column.columnComment */
        private $column.javaType $column.javaField;

    #end

    public ${ClassName}VO() {
    }

    public ${ClassName}VO(#foreach ($column in $dtoVoColumns)$column.javaType $column.javaField#if($foreach.count != $dtoVoColumns.size()), #end#end) {
        #foreach ($column in $dtoVoColumns)
            this.$column.javaField = $column.javaField;
        #end
    }

    public static ${ClassName}VOBuilder builder() {
        return new ${ClassName}VOBuilder();
    }

    public static class ${ClassName}VOBuilder {
        #foreach ($column in $dtoVoColumns)
            private $column.javaType $column.javaField;
        #end

        public   ${ClassName}VOBuilder() {
        }

        #foreach ($column in $dtoVoColumns)
            #set($field=$column.javaField)
            #set($javaType=$column.javaType)
            /* $column.columnComment */
            public ${ClassName}VOBuilder ${field}($javaType ${field}) {
                this.$column.javaField = $column.javaField;
                return this;
            }
        #end

        public ${ClassName}VO build() {
            return new ${ClassName}VO(#foreach ($column in $dtoVoColumns)
                $column.javaField#if($foreach.count != $dtoVoColumns.size()), #end
            #end);
        }

    }


    #foreach ($column in $dtoVoColumns)
        #if(!$table.isSuperColumn($column.javaField))
            #if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches("[A-Z]"))
                #set($AttrName=$column.javaField)
            #else
                #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
            #end
            public void set${AttrName}($column.javaType $column.javaField) {
                this.$column.javaField = $column.javaField;
            }

            public $column.javaType get${AttrName}() {
                return $column.javaField;
            }

        #end
    #end

    @Override
    public String toString() {
        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
            #foreach ($column in $dtoVoColumns)
                #if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches("[A-Z]"))
                    #set($AttrName=$column.javaField)
                #else
                    #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
                #end
                    .append("${column.javaField}", get${AttrName}())
                    #end
                .toString();
    }

}
